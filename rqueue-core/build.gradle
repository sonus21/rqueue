ext.projectDescription = "Asynchronous and scheduled task executor"
ext.name = "Rqueue Core Java"
buildscript {
    apply from: "${rootDir}/gradle/code-signing.gradle"
    apply from: "${rootDir}/gradle/packaging.gradle"
    apply from: "${rootDir}/gradle/test-runner.gradle"
}
dependencies {
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    api "jakarta.servlet:jakarta.servlet-api:${jakartaServletVersion}"
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    api "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"
    // https://mvnrepository.com/artifact/org.springframework/spring-webmvc
    api "org.springframework:spring-webmvc:${springVersion}"
    api "org.springframework:spring-webflux:${springVersion}"
    api "io.pebbletemplates:pebble-spring6:${pebbleVersion}"
    api "io.seruco.encoding:base62:${serucoEncodingVersion}"
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    api "org.apache.commons:commons-collections4:${apacheCommonCollectionVerion}"
    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    api "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
    // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
    api "io.micrometer:micrometer-core:${microMeterVersion}", optional
    testImplementation "io.lettuce:lettuce-core:${lettuceVersion}"
    testImplementation project(":rqueue-test-util")
}

processResources {
    doLast {
        def resourcesDir = sourceSets.main.output.resourcesDir
        def contents = "Version: $version\n"
        new File(resourcesDir, "META-INF/RQUEUE.MF").text = contents
    }
}
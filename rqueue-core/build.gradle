ext.projectDescription = 'Asynchronous and delayed task executor'
ext.name = 'Rqueue Core Java'
buildscript {
    apply from: "${rootDir}/gradle/code-signing.gradle"
    apply from: "${rootDir}/gradle/packaging.gradle"
    apply from: "${rootDir}/gradle/test-runner.gradle"
}
dependencies {
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: "${javaxServletVersion}"
    // https://mvnrepository.com/artifact/org.springframework/spring-webmvc
    compile group: 'org.springframework', name: 'spring-webmvc', version: "${springVersion}"
    compile group: 'org.springframework', name: 'spring-webflux', version: "${springVersion}"
    compile "io.pebbletemplates:pebble-spring5:${pebbleVersion}"
    compile group: 'io.seruco.encoding', name: 'base62', version: "0.1.3"
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation 'org.jetbrains:annotations:20.1.0'
    compile "javax.validation:validation-api:${javaxValidationApiVersion}"
    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.7.Final'
    // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
    compile "io.micrometer:micrometer-core:${microMeterVersion}", optional
    testCompile "io.lettuce:lettuce-core:${lettuceVersion}"
    testCompile project(":rqueue-test-util")
}

processResources {
    doLast {
        def resourcesDir = sourceSets.main.output.resourcesDir
        def contents = "Version: $version\n"
        new File(resourcesDir, "META-INF/RQUEUE.MF").text = contents
    }
}